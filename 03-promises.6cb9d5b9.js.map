{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAWtC,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAUT,EAAUU,MAAOT,IAErCM,EAAO,CAAEE,SAAUT,EAAUU,MAAOT,GAAQ,GAE7CA,EAAM,IAIRU,MAAKC,IACJ,MAAMH,SAAEA,EAAQC,MAAEA,GAAUE,EAC5Bf,EAAAgB,OAAOC,QAAQ,uBAAqBL,QAAiBC,OAAW,IAGjEK,OAAMH,IACL,MAAMH,SAAEA,EAAQC,MAAEA,GAAUE,EAC5Bf,EAAAgB,OAAOG,QAAQ,sBAAoBP,QAAeC,OAAW,G,CAItDO,SAASC,cAAc,SAE/BC,iBAAiB,UAAUC,IAC9BA,EAAEC,iBAEF,MAAMC,EAASC,SAASH,EAAEI,cAAcF,OAAOG,OAC/C,IAAIf,EAAQa,SAASH,EAAEI,cAAcd,MAAMe,OAC3C,MAAMC,EAAOH,SAASH,EAAEI,cAAcE,KAAKD,OAG1B1B,EAAc,EAAGW,GAElC,IAAK,IAAIiB,EAAI,EAAGA,EAAIL,EAAQK,IAC1BjB,GAASgB,EAIQ3B,EAAc4B,EAAI,EAAGjB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n\n  return promise\n    .then(data => {\n      const { position, delay } = data;\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n      //  Notify.success(delay);\n    })\n    .catch(data => {\n      const { position, delay } = data;\n      Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n    });\n}\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const amount = parseInt(e.currentTarget.amount.value);\n  let delay = parseInt(e.currentTarget.delay.value);\n  const step = parseInt(e.currentTarget.step.value);\n  // let curDelay = delay;\n  var currentPromise = {};\n  currentPromise = createPromise(1, delay);\n\n  for (let i = 1; i < amount; i++) {\n    delay += step;\n    // let tugDelay = String(curDelay);\n    // console.log(tugDelay);\n    // currentPromise = currentPromise.finally(() => createPromise(i + 1, delay));\n    currentPromise = createPromise(i + 1, delay);\n    //  console.log(i);\n  }\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","data","Notify","success","catch","failure","document","querySelector","addEventListener","e","preventDefault","amount","parseInt","currentTarget","value","step","i"],"version":3,"file":"03-promises.6cb9d5b9.js.map"}