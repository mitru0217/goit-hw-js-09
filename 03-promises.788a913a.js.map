{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,SAAUA,EAAUC,MAAOA,IAErCM,EAAO,CAAEP,SAAUA,EAAUC,MAAOA,G,GAErCA,E,IAoCMQ,SAASC,cAAc,aAE/BC,iBAAiB,UAAU,SAAAC,IAC9BA,EAAGC,iBACCD,EAAGE,cAAcC,aAAa,aAG7BH,EAAGE,eAtCV,SAAoBE,GAClB,IAAIC,EAAWD,EAATE,KACAC,EAAQF,EAAKG,SACbC,EAASC,SAASH,EAAc,OAAEI,MAAO,IACzCC,EAAQF,SAASH,EAAa,MAAEI,MAAO,IACvCE,EAAOH,SAASH,EAAY,KAAEI,MAAO,IACvCG,EAAYD,EAChBR,EAAKU,aAAa,UAAW,QAC7BD,EAAYF,EAMZ,IALA,IAAMI,EAAa,SAAA5B,GACbA,IAAaqB,GACfJ,EAAKY,gBAAgB,U,EAGhBC,EAAI,EAAGA,EAAIT,EAAQS,IACV/B,EAAc+B,EAAI,EAAGJ,GAElCK,MAAK,SAAAC,GACJ,IAAQhC,EAAoBgC,EAApBhC,SAAUC,EAAU+B,EAAV/B,MAClBJ,EAAAoC,OAAOC,QAAQ,uBAAwCC,OAAfnC,EAAS,QAAYmC,OAANlC,EAAM,OAC3D2B,EAAS5B,E,IAEZoC,OAAM,SAAAJ,GACL,IAAQhC,EAAoBgC,EAApBhC,SAAUC,EAAU+B,EAAV/B,MAClBJ,EAAAoC,OAAOI,QAAQ,sBAAqCF,OAAfnC,EAAS,QAAYmC,OAANlC,EAAM,OAC1D2B,EAAW5B,E,IAEf0B,GAAaD,C,CAkBfa,CAJa,CACXtC,SAAU,EACVkB,KAAMN,EAAGE,e","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\nfunction doPromises(data) {\n  let { form } = data;\n  const elems = form.elements;\n  const amount = parseInt(elems['amount'].value, 10);\n  const delay = parseInt(elems['delay'].value, 10);\n  const step = parseInt(elems['step'].value, 10);\n  let currDelay = step;\n  form.setAttribute('pending', 'true');\n  currDelay = delay;\n  const unblocking = position => {\n    if (position === amount) {\n      form.removeAttribute('pending');\n    }\n  };\n  for (let i = 0; i < amount; i++) {\n    const promise = createPromise(i + 1, currDelay);\n    promise\n      .then(data => {\n        const { position, delay } = data;\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        unblocking(position);\n      })\n      .catch(data => {\n        const { position, delay } = data;\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        unblocking(position);\n      });\n    currDelay += step;\n  }\n}\n\nconst form = document.querySelector('form.form');\n\nform.addEventListener('submit', ev => {\n  ev.preventDefault();\n  if (ev.currentTarget.getAttribute('pending')) {\n    return;\n  }\n  if (!ev.currentTarget) {\n    return;\n  }\n  const data = {\n    position: 1,\n    form: ev.currentTarget,\n  };\n  doPromises(data);\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","ev","preventDefault","currentTarget","getAttribute","data1","form1","form","elems","elements","amount","parseInt","value","delay1","step","currDelay","setAttribute","unblocking","removeAttribute","i","then","data","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$doPromises"],"version":3,"file":"03-promises.788a913a.js.map"}